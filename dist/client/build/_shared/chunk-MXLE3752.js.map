{
  "version": 3,
  "sources": ["../../../../app/components/ProductOptions.jsx"],
  "sourcesContent": ["import {\n    Link,\n    useLocation,\n    useSearchParams,\n    useNavigation,\n} from '@remix-run/react';\nexport default function ProductOptions({options, selectedVariant}) {\n    const {pathname, search} = useLocation();\n    const [currentSearchParams] = useSearchParams();\n    const navigation = useNavigation();\n  \n    const paramsWithDefaults = (() => {\n      const defaultParams = new URLSearchParams(currentSearchParams);\n  \n      if (!selectedVariant) {\n        return defaultParams;\n      }\n  \n      for (const {name, value} of selectedVariant.selectedOptions) {\n        if (!currentSearchParams.has(name)) {\n          defaultParams.set(name, value);\n        }\n      }\n  \n      return defaultParams;\n    })();\n  \n    // Update the in-flight request data from the 'navigation' (if available)\n    // to create an optimistic UI that selects a link before the request is completed\n    const searchParams = navigation.location\n      ? new URLSearchParams(navigation.location.search)\n      : paramsWithDefaults;\n  \n    return (\n    <div className=\"grid gap-4 mb-6\">\n      {options.map((option) => {\n        if (!option.values.length) {\n          return;\n        }\n\n        // get the currently selected option value\n        const currentOptionVal = searchParams.get(option.name);\n        return (\n          <div\n            key={option.name}\n            className=\"flex flex-col flex-wrap mb-4 gap-y-2 last:mb-0\"\n          >\n            <h3 className=\"whitespace-pre-wrap max-w-prose font-bold text-lead min-w-[4rem]\">\n              {option.name}\n            </h3>\n\n            <div className=\"flex flex-wrap items-baseline gap-4\">\n              {option.values.map((value) => {\n                const linkParams = new URLSearchParams(searchParams);\n                const isSelected = currentOptionVal === value;\n                linkParams.set(option.name, value);\n                return (\n                  <Link\n                    key={value}\n                    to={`${pathname}?${linkParams.toString()}`}\n                    preventScrollReset\n                    replace\n                    className={`leading-none py-1 border-b-[1.5px] cursor-pointer transition-all duration-200 ${\n                      isSelected ? 'border-gray-500' : 'border-neutral-50'\n                    }`}\n                  >\n                    {value}\n                  </Link>\n                );\n              })}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}"],
  "mappings": ";;;;;;;;;;;;AA+CY;AAzCG,SAAR,eAAgC,EAAC,SAAS,gBAAe,GAAG;AAC/D,QAAM,EAAC,UAAU,OAAM,IAAI,YAAY;AACvC,QAAM,CAAC,mBAAmB,IAAI,gBAAgB;AAC9C,QAAM,aAAa,cAAc;AAEjC,QAAM,sBAAsB,MAAM;AAChC,UAAM,gBAAgB,IAAI,gBAAgB,mBAAmB;AAE7D,QAAI,CAAC,iBAAiB;AACpB,aAAO;AAAA,IACT;AAEA,eAAW,EAAC,MAAM,MAAK,KAAK,gBAAgB,iBAAiB;AAC3D,UAAI,CAAC,oBAAoB,IAAI,IAAI,GAAG;AAClC,sBAAc,IAAI,MAAM,KAAK;AAAA,MAC/B;AAAA,IACF;AAEA,WAAO;AAAA,EACT,GAAG;AAIH,QAAM,eAAe,WAAW,WAC5B,IAAI,gBAAgB,WAAW,SAAS,MAAM,IAC9C;AAEJ,SACA,mDAAC,SAAI,WAAU,mBACZ,kBAAQ,IAAI,CAAC,WAAW;AACvB,QAAI,CAAC,OAAO,OAAO,QAAQ;AACzB;AAAA,IACF;AAGA,UAAM,mBAAmB,aAAa,IAAI,OAAO,IAAI;AACrD,WACE;AAAA,MAAC;AAAA;AAAA,QAEC,WAAU;AAAA,QAEV;AAAA,6DAAC,QAAG,WAAU,oEACX,iBAAO,QADV;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAEA,mDAAC,SAAI,WAAU,uCACZ,iBAAO,OAAO,IAAI,CAAC,UAAU;AAC5B,kBAAM,aAAa,IAAI,gBAAgB,YAAY;AACnD,kBAAM,aAAa,qBAAqB;AACxC,uBAAW,IAAI,OAAO,MAAM,KAAK;AACjC,mBACE;AAAA,cAAC;AAAA;AAAA,gBAEC,IAAI,GAAG,YAAY,WAAW,SAAS;AAAA,gBACvC,oBAAkB;AAAA,gBAClB,SAAO;AAAA,gBACP,WAAW,iFACT,aAAa,oBAAoB;AAAA,gBAGlC;AAAA;AAAA,cARI;AAAA,cADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAUA;AAAA,UAEJ,CAAC,KAlBH;AAAA;AAAA;AAAA;AAAA,iBAmBA;AAAA;AAAA;AAAA,MA1BK,OAAO;AAAA,MADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA4BA;AAAA,EAEJ,CAAC,KAvCH;AAAA;AAAA;AAAA;AAAA,SAwCA;AAEJ;",
  "names": []
}
