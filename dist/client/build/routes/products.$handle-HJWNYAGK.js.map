{
  "version": 3,
  "sources": ["../../../../app/routes/products.$handle.jsx"],
  "sourcesContent": ["import {useLoaderData} from '@remix-run/react';\nimport {json} from '@shopify/remix-oxygen';\nexport async function loader({params, context}) {\n    const {handle} = params;\n    const {product} = await context.storefront.query(PRODUCT_QUERY, {\n      variables: {\n        handle,\n      },\n    });\n  \n    if (!product?.id) {\n      throw new Response(null, {status: 404});\n    }\n  \n    return json({\n      handle,\n      product,\n    });\n  };\n  function PrintJson({data}) {\n    return (\n      <details className=\"outline outline-2 outline-blue-300 p-4 my-2\">\n        <summary>Product JSON</summary>\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      </details>\n    );\n  }\n  export default function ProductHandle() {\n    const {product} = useLoaderData();\n  \n    return (\n      <section className=\"w-full gap-4 md:gap-8 grid px-6 md:px-8 lg:px-12\">\n        <div className=\"grid items-start gap-6 lg:gap-20 md:grid-cols-2 lg:grid-cols-3\">\n          <div className=\"grid md:grid-flow-row  md:p-0 md:overflow-x-hidden md:grid-cols-2 md:w-full lg:col-span-2\">\n            <div className=\"md:col-span-2 snap-center card-image aspect-square md:w-full w-[80vw] shadow rounded\">\n              <h2>TODO Product Gallery</h2>\n            </div>\n          </div>\n          <div className=\"md:sticky md:mx-auto max-w-xl md:max-w-[24rem] grid gap-8 p-0 md:p-6 md:px-0 top-[6rem] lg:top-[8rem] xl:top-[10rem]\">\n            <div className=\"grid gap-2\">\n              <h1 className=\"text-4xl font-bold leading-10 whitespace-normal\">\n                {product.title}\n              </h1>\n              <span className=\"max-w-prose whitespace-pre-wrap inherit text-copy opacity-50 font-medium\">\n                {product.vendor}\n              </span>\n            </div>\n            <h3>Product Options TODO</h3>\n            <div\n              className=\"prose border-t border-gray-200 pt-6 text-black text-md\"\n              dangerouslySetInnerHTML={{ __html: product.descriptionHtml }}\n            ></div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n  const PRODUCT_QUERY = `#graphql\n  query product($handle: String!) {\n    product(handle: $handle) {\n      id\n      title\n      handle\n      vendor\n      descriptionHtml\n      media(first: 10) {\n        nodes {\n          ... on MediaImage {\n            mediaContentType\n            image {\n              id\n              url\n              altText\n              width\n              height\n            }\n          }\n          ... on Model3d {\n            id\n            mediaContentType\n            sources {\n              mimeType\n              url\n            }\n          }\n        }\n      }\n      options {\n        name,\n        values\n      }\n    }\n  }\n`;"],
  "mappings": ";;;;;;;;;AAsBQ;AAKS,SAAR,gBAAiC;AACtC,QAAM,EAAC,QAAO,IAAI,cAAc;AAEhC,SACE,mDAAC,aAAQ,WAAU,oDACjB,6DAAC,SAAI,WAAU,kEACb;AAAA,uDAAC,SAAI,WAAU,6FACb,6DAAC,SAAI,WAAU,wFACb,6DAAC,QAAG,oCAAJ;AAAA;AAAA;AAAA;AAAA,WAAwB,KAD1B;AAAA;AAAA;AAAA;AAAA,WAEA,KAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IACA,mDAAC,SAAI,WAAU,wHACb;AAAA,yDAAC,SAAI,WAAU,cACb;AAAA,2DAAC,QAAG,WAAU,mDACX,kBAAQ,SADX;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,UAAK,WAAU,4EACb,kBAAQ,UADX;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WANF;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,MACA,mDAAC,QAAG,oCAAJ;AAAA;AAAA;AAAA;AAAA,aAAwB;AAAA,MACxB;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,yBAAyB,EAAE,QAAQ,QAAQ,gBAAgB;AAAA;AAAA,QAF7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAGC;AAAA,SAbH;AAAA;AAAA;AAAA;AAAA,WAcA;AAAA,OApBF;AAAA;AAAA;AAAA;AAAA,SAqBA,KAtBF;AAAA;AAAA;AAAA;AAAA,SAuBA;AAEJ;",
  "names": []
}
